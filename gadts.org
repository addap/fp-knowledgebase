* Description
Generalized Algebraic Datatypes seem to be similar to indexed inductive datatypes in Coq because you can instantiate type variables in the target type of a constructor.
* Resources
** TODO [[https://www.reddit.com/r/haskell/comments/rk0uf/why_gadts_are_awesome_implementing_system_f_using/][Why GADTs are awesome]]
** TODO [[https://wiki.haskell.org/GADTs_for_dummies][GADTs for dummies]]
** DONE [[http://www.haskellforall.com/2012/06/gadts.html?m=1][GADTs]] can be approximated using the [[file:yoneda-lemma.org::*Decription][Yoneda Lemma]]
** TODO [[https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/gadt-pldi.pdf][Simple unification-based type inference for GADTs]]
